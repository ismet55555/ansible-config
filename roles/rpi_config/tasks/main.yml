---
- name: Update raspi-config Itself
  become: true
  apt: name=raspi-config update_cache=yes state=present cache_valid_time=3600
  when: UPDATE_RASPI|default(true) | bool

# - name: Updating pi User Password
#   user:
#     name: pi
#     password: "{{ USER_PASSWORD|default('raspberry') | password_hash('sha512', 'mysecretsalt') }}"
#   when: CHANGE_USER_PASSWORD|default(false) | bool

- name: Get Raspberry Pi Type
  shell: "raspi-config nonint get_pi_type"
  register: pi_type
  changed_when: false

- name: Show pi version
  debug:
    msg: "Pi version: {{ pi_type.stdout }}"


#######################################################
#######################################################


- name: Create LXDE configuration directory
  become: true
  file:
    path: "/etc/xdg/pcmanfm/LXDE-pi/"
    state: directory
  when: BOOTBEHAVIOUR|default('B2') == 'B3' or BOOTBEHAVIOUR|default('B2') == 'B4'

- name: Copy LXDE desktop configurations
  become: true
  copy:
    src: "{{ role_path }}/files/desktop-items-0.conf"
    dest: "/etc/xdg/pcmanfm/LXDE-pi/desktop-items-0.conf"
  when: BOOTBEHAVIOUR|default('B2') == 'B3' or BOOTBEHAVIOUR|default('B2') == 'B4'

- name: Reload LXDE Desktop environment
  become: false
  shell: pcmanfm --reconfigure
  when: BOOTBEHAVIOUR|default('B2') == 'B3' or BOOTBEHAVIOUR|default('B2') == 'B4'
  ignore_errors: true

#######################################################
#######################################################


# 2 Network Options

# N1 Hostname
- name: Get Hostname
  shell: raspi-config nonint get_hostname
  register: pi_hostname
  changed_when: false

- name: Print Current Hostname
  debug:
    msg: "Hostname current: {{ pi_hostname.stdout }} | target: {{ HOSTNAME|default('pi') }}"

- name: Change Hostname
  shell: raspi-config nonint do_hostname {{ HOSTNAME|default('pi') }}
  when: CHANGE_HOSTNAME|default(false) | bool

# N2 Wi-fi
- name: Set WiFi credentials
  shell: "raspi-config nonint do_wifi_ssid_passphrase {{ WIFI_SSID|default('XXXX') }} {{ WIFI_PASSPHRASE|default('XXXX') }}"
  when: CHANGE_WIFI|default(false) | bool

# N3 Network interface names
- name: Get network names status
  shell: "raspi-config nonint get_net_names"
  register: pi_netnames
  changed_when: false

- name: Print current network names status
  debug:
    msg: "Current network names status: {{ pi_netnames.stdout }}"

- name: Enable network names
  shell: "raspi-config nonint do_net_names 0"
  when: ((NETNAMES|default(false) | bool) == true) and (pi_netnames.stdout != '0')

- name: Disable network names
  shell: "raspi-config nonint do_net_names 1"
  when: ((NETNAMES|default(false) | bool) == false) and (pi_netnames.stdout != '1')

# #######################################################
# #######################################################

# 3 Boot Options

# B1 Desktop / CLI
- name: Get boot CLI
  shell: "raspi-config nonint get_boot_cli"
  register: boot_cli
  changed_when: false

- name: Print boot CLI
  debug:
    msg: "Boot CLI is: {{ boot_cli.stdout }}"

- name: Get boot autologin
  shell: "raspi-config nonint get_autologin"
  register: auto_login
  changed_when: false

- name: Print boot autologin status
  debug:
    msg: "Boot autologin currently is: {{ auto_login.stdout }}"

# B1 cli, B2 cli autologin, B3 desktop, B4 desktop autologin
- name: Set Boot behaviour
  shell: "raspi-config nonint do_boot_behaviour {{ BOOTBEHAVIOUR|default('B2') }}"

# # B2 Wait for Network at Boot
# - name: Get boot wait for network status
#   shell: "raspi-config nonint get_boot_wait"
#   register: boot_wait
#   changed_when: false

# - name: Print boot wait for network status
#   debug:
#     msg: "Boot wait currently is: {{ boot_wait.stdout }}"

# - name: Set boot wait network status
#   shell: "raspi-config nonint do_boot_wait {{ BOOTWAIT|default('1') }}"

# B3 Splash Screen
- name: Get splash status
  shell: "raspi-config nonint get_boot_splash"
  register: boot_splash
  changed_when: false

- name: Print boot splash status
  debug:
    msg: "Boot splash status currently is: {{ boot_splash.stdout }}"

- name: Set boot splash
  shell: "raspi-config nonint do_boot_splash {{ BOOTSPLASH|default('1') }}"


# #######################################################
# #######################################################


# 4 Localisation Options

# I1 Change Locale
- name: Change locale
  shell: "raspi-config nonint do_change_locale {{ LOCALE|default('en_US.UTF-8') }}"
  when: CHANGE_LOCALE_INFO|default(false) | bool

# I2 Change Timezone
- name: Change timezone
  shell: "raspi-config nonint do_change_timezone {{ TIMEZONE|default('America/New_York') }}"
  when: CHANGE_LOCALE_INFO|default(false) | bool

# I3 Change Keyboard Layout
- name: Change keyboard layout
  shell: "raspi-config nonint do_configure_keyboard {{ XKBLAYOUT | default('us') }}"
  when: CHANGE_LOCALE_INFO|default(false) | bool

# I4 Change Wi-fi Country
- name: Set WiFi country
  shell: "raspi-config nonint do_wifi_country {{ WIFI_COUNTRY|default('US')}}"
  when: CHANGE_WIFI|default(false) | bool

- name: Get WiFi country
  shell: "raspi-config nonint get_wifi_country"
  register: wifi_country
  changed_when: false
  ignore_errors: true  # to avoid error when WiFi is not present
  when: CHANGE_WIFI|default(false) | bool

- name: Print current WiFi country
  debug:
    msg: "Wifi country is: {{ wifi_country.stdout }}"
  when: CHANGE_WIFI|default(false) | bool


# #######################################################
# #######################################################


# 5 Interfacing Options

# P1 CAMERA
- name: Get camera status
  shell: "raspi-config nonint get_camera"
  register: camera_status
  changed_when: false

- name: Print camera status
  debug:
    msg: "Camera status is: {{ camera_status.stdout }}"

- name: Enable Camera
  shell: "raspi-config nonint do_camera 0"
  when: ((CAMERA|default(false) | bool) == true) and (camera_status.stdout != '0')

- name: Disable Camera
  shell: "raspi-config nonint do_camera 1"
  when: ((CAMERA|default(false) | bool) == false) and (camera_status.stdout != '1')

# P2 SSH
- name: Check if SSH is enabled or not
  shell: "raspi-config nonint get_ssh"
  register: ssh_status
  changed_when: false

- name: Print SSH status
  debug:
    msg: "SSH current status is: {{ ssh_status.stdout }} (0-Enabled, 1-Disabled)"

- name: Enable SSH
  shell: "raspi-config nonint do_ssh 0"
  when: ((SSH|default(true) | bool) == true) and (ssh_status.stdout != '0')

- name: Disable SSH
  shell: "raspi-config nonint do_ssh 1"
  when: ((SSH|default(true) | bool) == false) and (ssh_status.stdout != '1')

# P3 VNC
- name: Get VNC status
  shell: "raspi-config nonint get_vnc"
  register: vnc_status
  changed_when: false

- name: Print VNC status
  debug:
    msg: "VNC current status is: {{ vnc_status.stdout }} (0-Enabled, 1-Disabled)"

- name: Enable VNC
  shell: "raspi-config nonint do_vnc 0"
  when: ((VNC|default(false) | bool) == true) and (vnc_status.stdout != '0')

- name: Disable VNC
  shell: "raspi-config nonint do_vnc 1"
  when: ((VNC|default(false) | bool) == false) and (vnc_status.stdout != '1')

# P4 SPI
- name: Get SPI status
  shell: "raspi-config nonint get_spi"
  register: spi_status
  changed_when: false

- name: Print SPI status
  debug:
    msg: "SPI current status is: {{ spi_status.stdout }} (0-Enabled, 1-Disabled)"

- name: Enable SPI
  shell: "raspi-config nonint do_spi 0"
  when: ((SPI|default(false) | bool) == true) and (spi_status.stdout != '0')

- name: Disable SPI
  shell: "raspi-config nonint do_spi 1"
  when: ((SPI|default(false) | bool) == false) and (spi_status.stdout != '1')

# P5 I2C
- name: Get I2C status
  shell: "raspi-config nonint get_i2c"
  register: i2c_status
  changed_when: false

- name: Print I2C status
  debug:
    msg: "I2C current status is: {{ i2c_status.stdout }} (0-Enabled, 1-Disabled)"

- name: Enable I2C
  shell: "raspi-config nonint do_i2c 0"
  when: ((I2C|default(false) | bool) == true) and (i2c_status.stdout != '0')

- name: Disable I2C
  shell: "raspi-config nonint do_i2c 1"
  when: ((I2C|default(false) | bool) == false) and (i2c_status.stdout != '1')

# # P6 Serial
# - name: Get serial status
#   shell: "raspi-config nonint get_serial"
#   register: serial_status
#   changed_when: false
#
# - name: Print serial status
#   debug:
#     msg: "SERIAL current status is: {{ serial_status.stdout }} (0-Enabled, 1-Disabled)"
#
# - name: Get serialHW status
#   shell: "raspi-config nonint get_serial_hw"
#   register: serialhw_status
#   changed_when: false
#
# - name: Print serialHW status (Hardware)
#   debug:
#     msg: "SERIALHW current status is: {{ serialhw_status.stdout }} (0-Enabled, 1-Disabled)"
#
# - name: Enable serial
#   shell: "raspi-config nonint do_serial 0"
#   when: ((SERIAL|default(false) | bool) == true) and (serial_status.stdout != '0')
#
# - name: Disable serial
#   shell: "raspi-config nonint do_serial 1"
#   when: ((SERIAL|default(false) | bool) == false) and (serial_status.stdout != '1')

# P7 1-Wire
- name: Get Onewire status
  shell: "raspi-config nonint get_onewire"
  register: onewire_status
  changed_when: false

- name: Print Onewire status
  debug:
    msg: "ONEWIRE current status is: {{ onewire_status.stdout }} (0-Enabled, 1-Disabled)"

- name: Enable OneWire
  shell: "raspi-config nonint do_onewire 0"
  when: ((ONEWIRE|default(false) | bool) == true) and (onewire_status.stdout != '0')

- name: Disable OneWire
  shell: "raspi-config nonint do_onewire 1"
  when: ((ONEWIRE|default(false) | bool) == false) and (onewire_status.stdout != '1')

# P8 Remote GPIO
- name: Get rGPIO status
  shell: "raspi-config nonint get_rgpio"
  register: rgpio_status
  changed_when: false

- name: Print rGPIO status
  debug:
    msg: "rGPIO current status is: {{ rgpio_status.stdout }} (0-Enabled, 1-Disabled)"

- name: Enable Remote GPIO
  shell: "raspi-config nonint do_rgpio 0"
  when: ((RGPIO|default(false) | bool) == true) and (rgpio_status.stdout != '0')

- name: Disable Remote GPIO
  shell: "raspi-config nonint do_rgpio 1"
  when: ((RGPIO|default(false) | bool) == false) and (rgpio_status.stdout != '1')


# #######################################################
# #######################################################


# 7 Advanced Options

# A2 Overscan
- name: Get Overscan status
  shell: "raspi-config nonint get_overscan"
  register: pi_overscan
  changed_when: false

- name: Print Overscan
  debug:
    msg: "BOOT OVERSCAN current status is: {{ pi_overscan.stdout }} (0-Enabled, 1-Disabled)"

- name: Enable Overscan
  shell: "raspi-config nonint do_overscan {{ OVERSCAN|default('false') }}"
  when: OVERSCAN|default(false) | bool

# # A3 Memory Split
# - name: Get current GPU memory split (1/4)
#   shell: "raspi-config nonint get_config_var gpu_mem /boot/config.txt"
#   register: gpu_mem
#   changed_when: false
#
# - name: Get current GPU memory split 256 (2/4)
#   shell: "raspi-config nonint get_config_var gpu_mem_256 /boot/config.txt"
#   register: gpu_mem_256
#   changed_when: false
#
# - name: Get current GPU memory split 512 (3/4)
#   shell: "raspi-config nonint get_config_var gpu_mem_512 /boot/config.txt"
#   register: gpu_mem_512
#   changed_when: false
#
# - name: Get current GPU memory split 1024 (4/4)
#   shell: "raspi-config nonint get_config_var gpu_mem_1024 /boot/config.txt"
#   register: gpu_mem_1k
#   changed_when: false
#
# - name: Print current GPU memory split
#   debug:
#     msg: "Current GPU memory split: {{ gpu_mem.stdout }} - {{ gpu_mem_256.stdout }} - {{ gpu_mem_512.stdout }} - {{ gpu_mem_1k.stdout }}"
#
# - name: Set GPU memory split
#   shell: "raspi-config nonint do_memory_split {{ MEMSPLIT|default('16') }}"
#   # when: gpu_mem.stdout != MEMSPLIT

# A4 Audio
### 0 Auto, 1 Force 3.5mm, 2 Force hdmi
- name: Set audio out
  shell: "raspi-config nonint do_audio {{ AUDIO_OUT|default('0') }}"

# # A6 Pixel Doubling
# - name: Get pixel doubling
#   shell: "raspi-config nonint get_pixdub"
#   register: pixdub_status
#   changed_when: false
#
# - name: Print pixel doubling status
#   debug:
#     msg: "PIXEL DOUBLING current status is: {{ pixdub_status.stdout }} (0-Enabled, 1-Disabled)"
#
# - name: Enable pixel doubling
#   shell: "raspi-config nonint do_pixdub 0"
#   when: ((PIXDUB|default(false) | bool) == true) and (pixdub_status.stdout != '0')
#
# - name: Disable pixel doubling
#   shell: "raspi-config nonint do_onewire 1"
#   when: ((PIXDUB|default(false) | bool) == false) and (pixdub_status.stdout != '1')
